// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/complex-float64-ctor@v0.0.3-esm/index.mjs";import{isPrimitive as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.2.2-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-replace@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";function i(i){var n,d,o=0;if(!s(i))throw new TypeError(r("null3F",i));if(!(n=e(i,/\s/g,"").match(/^([-+]?(\d*\.?\d*(?:[eE][-+]?\d+)?|Infinity|NaN)i?)?([-+])?((\d*\.?\d*(?:[eE][-+]?\d+)?|Infinity|NaN)i)?$/)))throw new Error(r("invalid argument. Unable to parse input string as a complex number. Value: `%s`.",i));return d=n[1]&&!n[1].endsWith("i")?parseFloat(n[1]):0,n[4]?o=("-"===n[3]?-1:1)*parseFloat(e(n[4],/i$/,"")):n[1]&&n[1].endsWith("i")&&(o=parseFloat(e(n[1],/i$/,""))),new t(d,o)}export{i as default};
//# sourceMappingURL=index.mjs.map
